<?php
/**
 * Created by PhpStorm.
 * User: mash
 * Date: 2018/7/3
 * Time: 11:31
 */
namespace App\Controller\Admin;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;
use App\Entity\Article as ArticleEntity;
use App\Form\ArticleType;
use App\Service\FileUploader;

/**
 * Class Article
 * @package App\Controller\Admin
 * @Route("/admin/article")
 */
class Article extends Controller
{
    /**
     * @Route("/index/{page}",name="article_index",requirements={"page":"\d+"})
     */
    public function index($page=1,Request $request)
    {
        //$page = $request->query->get('page',1);
        $repository = $this->getDoctrine()->getRepository(ArticleEntity::class);
        $query_builder = $repository->createQueryBuilder('u');
        $paginator = $this->get('knp_paginator');
        $pagination = $paginator->paginate($query_builder,$page,10);
        return $this->render('admin/article/index.html.twig',[
            'pagination'   =>  $pagination,
        ]);
    }

    /**
     * @Route("/add",name="article_add" , methods={"GET","POST"})
     */
    public function add(Request $request, FileUploader $fileUploader)
    {
        $article = new ArticleEntity();
        $form = $this->createForm(ArticleType::class,$article);
        $form->handleRequest($request);
        if($form->isSubmitted() && $form->isValid()){
            /*
            //控制器上传
            $file = $form->get('thumb')->getData();
            if($file !== null){
                $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();
                // moves the file to the directory where brochures are stored
                $file->move(
                    $this->getParameter('upload_path'),
                    $fileName
                );
                $article->setThumb($fileName);
            }
            */

            //服务上传
            $file = $form->get('thumb')->getData();
            if(null !== $file){
                $fileName = $fileUploader->upload($file);
                $article->setThumb($fileName);
            }

            $article = $form->getData();

            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->persist($article);
            $entityManager->flush();
            return $this->redirectToRoute('article_index');
        }

        return $this->render('admin/article/add.html.twig',
            ['form'=>$form->createView()]);
    }
    /**
     * @Route("/edit/{id}",name="article_edit",methods={"GET","POST"},requirements={"id":"\d+"})
     */
    public function edit($id, Request $request ,FileUploader $fileUploader )
    {
        $repository = $this->getDoctrine()->getRepository(ArticleEntity::class);
        $article = $repository->find($id);
        //dump($this->getParameter('upload_path'));
        $old_file = $article->getThumb();

        $form = $this->createForm(ArticleType::class,$article);
        $form->handleRequest($request);

        if($form->isSubmitted() && $form->isValid()){
            //服务上传
            $file = $form->get('thumb')->getData();
            if(null !== $file){
                $fileName = $fileUploader->upload($file);
                $article->setThumb($fileName);
            }

            $article = $form->getData();
            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->flush();
            return $this->redirectToRoute('article_index');
        }

        return $this->render('admin/article/edit.html.twig',['form'=>$form->createView()]);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

}